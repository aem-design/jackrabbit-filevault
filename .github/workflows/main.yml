#  <!--
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#    -->
name: ci

on:
    push:
        branches:
            - master

jobs:
    build:
        
        runs-on: ubuntu-latest
        env:
            GITHUB_EMAIL: ${{ secrets.GITHUB_EMAIL }}
            GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
            GPG_SECRET_KEYS: ${{ secrets.GPG_SECRET_KEYS }}
            GPG_OWNERTRUST: ${{ secrets.GPG_OWNERTRUST }}
            GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
            GPG_EXECUTABLE: gpg
            GPG_PRESET_EXECUTABLE: /usr/lib/gnupg/gpg-preset-passphrase
            GPG_PUBID: "50A036956AAC64C13EF47B10D1E96A30ECFC7DFF"
            GPG_PUBID_KEYGRIP: "020E615868703482DC2CD110B98D2702B6ABF89C"
            JACKRABBIT_VERSION: "2.19.6-SNAPSHOT"
        
        
        steps:
            - uses: actions/checkout@v1
              with:
                  ref: refs/heads/master
            - uses: actions/setup-java@v1
              with:
                  java-version: '1.8'
            - name: get release notes
              run: |
                  source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/github_get_version.sh)
                  echo "===START==="
                  echo $GIT_RELEASE_NOTES
                  echo "====END===="
                  echo CURRENT_VERSION=$CURRENT_VERSION
            - name: add upstream remote to source project and get latest updates
              run: |
                  git checkout master
                  git fetch --all
                  git pull --all
                  git remote add uptream https://github.com/apache/jackrabbit-filevault.git
                  git checkout trunk
                  git pull uptream trunk
            - name: merge trunk into master
              run: |
                  git config --global user.email "${GITHUB_EMAIL}"
                  git config --global user.name "${GITHUB_USERNAME}"
                  git checkout master
                  git merge trunk
            - name: merge any of our new branches into master
              run: |
                  git branch
                  git status
                  git checkout feature/enable-insecure-https-host
                  git checkout master
                  git merge feature/enable-insecure-https-host
            - name: setup gpg
              run: |
                  export GPG_TTY=$(tty)
                  echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --batch --import && echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust
                  gpg --list-keys
            - name: get custom jackrabit artifacts
              run: |
                  source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/download.sh)
                  mkdir bin
                  echo download files
                  download "./bin/" "-" "-" "https://github.com/aem-design/jackrabbit/releases/download/${JACKRABBIT_VERSION}/jackrabbit-core-${JACKRABBIT_VERSION}.jar.tgz"
                  download "./bin/" "-" "-" "https://github.com/aem-design/jackrabbit/releases/download/${JACKRABBIT_VERSION}/jackrabbit-jcr-commons-${JACKRABBIT_VERSION}.jar.tgz"
                  download "./bin/" "-" "-" "https://github.com/aem-design/jackrabbit/releases/download/${JACKRABBIT_VERSION}/jackrabbit-jcr-client-${JACKRABBIT_VERSION}.jar.tgz"
                  download "./bin/" "-" "-" "https://github.com/aem-design/jackrabbit/releases/download/${JACKRABBIT_VERSION}/jackrabbit-spi-commons-${JACKRABBIT_VERSION}.jar.tgz"
                  download "./bin/" "-" "-" "https://github.com/aem-design/jackrabbit/releases/download/${JACKRABBIT_VERSION}/jackrabbit-spi-${JACKRABBIT_VERSION}.jar.tgz"
                  download "./bin/" "-" "-" "https://github.com/aem-design/jackrabbit/releases/download/${JACKRABBIT_VERSION}/jackrabbit-jcr2spi-${JACKRABBIT_VERSION}.jar.tgz"
                  download "./bin/" "-" "-" "https://github.com/aem-design/jackrabbit/releases/download/${JACKRABBIT_VERSION}/jackrabbit-spi2dav-${JACKRABBIT_VERSION}.jar.tgz"
                  download "./bin/" "-" "-" "https://github.com/aem-design/jackrabbit/releases/download/${JACKRABBIT_VERSION}/jackrabbit-webdav-${JACKRABBIT_VERSION}.jar.tgz"
                  echo extract jar files
                  find ./bin -name *.tgz -exec tar --strip=2 -C ./bin -xvzf {} \;
                  ls -l ./bin
                  echo install dependecy jars
                  mvn install:install-file -Dfile=./bin/jackrabbit-core-${JACKRABBIT_VERSION}.jar -DgroupId=org.apache.jackrabbit -DartifactId=jackrabbit-core -Dversion=${JACKRABBIT_VERSION} -Dpackaging=jar -DgeneratePom=true
                  mvn install:install-file -Dfile=./bin/jackrabbit-jcr-commons-${JACKRABBIT_VERSION}.jar -DgroupId=org.apache.jackrabbit -DartifactId=jackrabbit-jcr-commons -Dversion=${JACKRABBIT_VERSION} -Dpackaging=jar -DgeneratePom=true
                  mvn install:install-file -Dfile=./bin/jackrabbit-jcr-client-${JACKRABBIT_VERSION}.jar -DgroupId=org.apache.jackrabbit -DartifactId=jackrabbit-jcr-client -Dversion=${JACKRABBIT_VERSION} -Dpackaging=jar -DgeneratePom=true
                  mvn install:install-file -Dfile=./bin/jackrabbit-spi-commons-${JACKRABBIT_VERSION}.jar -DgroupId=org.apache.jackrabbit -DartifactId=jackrabbit-spi-commons -Dversion=${JACKRABBIT_VERSION} -Dpackaging=jar -DgeneratePom=true
                  mvn install:install-file -Dfile=./bin/jackrabbit-spi-${JACKRABBIT_VERSION}.jar -DgroupId=org.apache.jackrabbit -DartifactId=jackrabbit-spi -Dversion=${JACKRABBIT_VERSION} -Dpackaging=jar -DgeneratePom=true
                  mvn install:install-file -Dfile=./bin/jackrabbit-jcr2spi-${JACKRABBIT_VERSION}.jar -DgroupId=org.apache.jackrabbit -DartifactId=jackrabbit-jcr2spi -Dversion=${JACKRABBIT_VERSION} -Dpackaging=jar -DgeneratePom=true
                  mvn install:install-file -Dfile=./bin/jackrabbit-spi2dav-${JACKRABBIT_VERSION}.jar -DgroupId=org.apache.jackrabbit -DartifactId=jackrabbit-spi2dav -Dversion=${JACKRABBIT_VERSION} -Dpackaging=jar -DgeneratePom=true
                  mvn install:install-file -Dfile=./bin/jackrabbit-webdav-${JACKRABBIT_VERSION}.jar -DgroupId=org.apache.jackrabbit -DartifactId=jackrabbit-webdav -Dversion=${JACKRABBIT_VERSION} -Dpackaging=jar -DgeneratePom=true
            - name: build and prepare maven artifacts
              run: |
                  export MAVEN_OPTS="-Xmx2024M -Xss128M -XX:MetaspaceSize=512M -XX:MaxMetaspaceSize=2024M -XX:+CMSClassUnloadingEnabled"
                  # mvn release:prepare -DskipTests=true -Dgpg.skip -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -Dmaven.repo.local=${GITHUB_WORKSPACE}/.m2/repository -B
                  mvn package -Djackrabbit.version=${JACKRABBIT_VERSION} -B
                  echo ::set-env name=GITHUB_TAG::$(mvn help:evaluate -q -DforceStdout -Dexpression=project.version)
                  # mvn deploy -P release -DskipTests=true -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/$GITHUB_REPOSITORY --settings settings.xml -B
                  # deploy files as release artifacts
            - uses: meeDamian/github-release@1.0
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag: ${{ env.GITHUB_TAG }}
                  name: ${{ env.GITHUB_TAG }}
                  body: ${{ env.GIT_RELEASE_NOTES }}
                  files: >
                      **/target/*.jar
#                      **/target/*.asc
#                      **/target/*.pom
